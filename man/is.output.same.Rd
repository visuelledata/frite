% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is-output-same.R
\name{is.output.same}
\alias{is.output.same}
\title{Checks if the arguments in .call will produce identical output in other functions}
\usage{
is.output.same(.call, ..., quiet = FALSE)
}
\arguments{
\item{.call}{Function call, such as '.call = my_function(x = 1:3)}

\item{...}{One or more function names}

\item{quiet}{Optional warning suppression}
}
\value{
logical - TRUE if outputs are identical
}
\description{
The use for this is to evaluate your code, while you're cleaning your functions. You
can have a function call as the first argument and the name of the cleaned function
as the second argument, then it will evaluate the functions with identical arguments
and see if the output is identical.
}
\details{
Use only in pipe chains with a length of one, or it will evaluate up to the
 top of the chain. Also it's not recommended to use pipes with this function, as it
 undoes what the pipe is intended to do. If you don't pipe in .call, then the function
 operates off the fact that calls given inside of function calls function are promises,
 allowing the code to be wrapped in substitute() within the function.
}
\examples{

library(dplyr)
is.output.same(map(1:3, cumsum), lapply) # TRUE
is.output.same(cumsum(1:3), cumprod)     # FALSE
is.output.same(sum(1:3), prod)           # FALSE for outputs of different class
subset(iris, Sepal.Width < 5) \%>\%        # Pipeable
  is.output.same(filter)
mean(1:3) \%>\%                            # FALSE
  is.output.same(median)

}
\seealso{
\code{\link{find_call_piped}}
}
